@inject NavigationManager NavManager
@using Group19LibraryApp.Pages.Components
@using Sve.Blazor.InfiniteScroll.Components
@using Group19LibraryApp.Data
@page "/MainMap"

<PageTitle>Main Map Page</PageTitle>

<head>
    <link href='https://fonts.googleapis.com/css?family=DM Sans' rel='stylesheet'>
    <style>
        body {
            font-family: 'DM Sans';
            font-size: 22px;
            background-color: #FFFFFF
        }

    </style>
</head>

<body>

    <header>
    </header>
    <div id="container2" class="scroller">
        <img src="LayoutImages/@currentImage" /> <!--multiPinLayout.PNG-->
        <h1>
            <strong>Saved Location</strong>
        </h1>
        <InfiniteScroll ObserverTargetId="observerTarget" > 
            <ul style="list-style: none; padding-left: 0rem;">
				@foreach (var libItem in libraryItems) {
                    if (LibraryData.currentLocation == libItem.Location[0])
                    {
                        <li>
                            <h2 class="Header2" style="color: @PickColour(libItem);">
                            @libItem.Title
                        </h2>
                        <h2 class="Header3">
                            Row @libItem.Location[1], Shelf @libItem.Location[2]
                        </h2>
                        <hr />

                        <button type="button" class="btn-close" aria-label="Close" @onclick="() => RemoveItem(libItem)"></button>
                    </li>
                    }
                }
                <li id="observerTarget"></li>
           </ul>
        </InfiniteScroll>
    </div>

</body>

@code {
    [CascadingParameter]
    public MainLayout Layout { get; set; }

    List<LibraryItem> libraryItems = LibraryData.books.Where(i => i.LocationSaved).ToList();
    String currentImage = null;
    String[] usableColors = { "#0135EB", "#1CAEAE", "#6326E5" };

    private void RemoveItem(LibraryItem toBeDeleted) {
        foreach (var libItem in LibraryData.books)
        {
            if (libItem.Equals(toBeDeleted))
            {
                libItem.LocationSaved = false;
                break;
            }
        }
        libraryItems = LibraryData.books.Where(i => i.LocationSaved).ToList();
        PickImage();
    }

    private string PickColour(LibraryItem toBeColoured) {
        int shelfNumber;
        if (toBeColoured.Location[0] == "LibraryA" && libraryItems.Count() > 1)
        {
            shelfNumber = Int32.Parse(toBeColoured.Location[2]);
            if (shelfNumber == 13)
            {
                return usableColors[0];
            }
            else if (shelfNumber == 5)
            {
                return usableColors[1];
            }
            else if (shelfNumber == 10)
            {
                return usableColors[2];
            }
        }
        return usableColors[0];
            /*switch (libraryItems.Count()) {
                case 1:
        return usableColors[0];
        break;
        case 2:
        if (toBeColoured.Location[0] == "LibraryA") {
        shelfNumber = Int32.Parse(toBeColoured.Location[2]);
        if (shelfNumber == 13)
        {
        return usableColors[0];
            }
            else if (shelfNumber == 5)
        {
        return usableColors[1];
            }
            else if (shelfNumber == 10)
            {
            return usableColors[2];
    }
    }
            return usableColors[0];
    break;
    case 3:
    shelfNumber = Int32.Parse(toBeColoured.Location[2]);
        if (shelfNumber == 13) {
    return usableColors[0];
        } else if (shelfNumber == 5) {
    return usableColors[1];
        } else if (shelfNumber == 10) {
    return usableColors[2];
    }
    return usableColors[0];
    break;
    default:
    return usableColors[0];
    break;

    }*/
    }

    private void PickImage() {
        switch(LibraryData.currentLocation) {
            case "LibraryA":
                currentImage = "libraryALayout.png";
                if (libraryItems[0].Location[0] == "LibraryA") {
                    if (libraryItems.Count() == 1)
                    {
                        currentImage = libraryItems[0].ItemLocationImageLink;
                    }
                    else if (libraryItems.Count() == 2)
                    {
                        var checkLocationOne = libraryItems.FirstOrDefault(o => o.Location[2].Equals("13"));
                        var checkLocationTwo = libraryItems.FirstOrDefault(o => o.Location[2].Equals("10"));
                        var checkLocationThree = libraryItems.FirstOrDefault(o => o.Location[2].Equals("5"));

                        if (checkLocationOne != null && checkLocationTwo != null)
                        {
                            currentImage = "MainMapLayouts/multiPinDelete5Layout.png";
                        }
                        else if (checkLocationOne != null && checkLocationThree != null)
                        {
                            currentImage = "MainMapLayouts/multiPinDelete10Layout.png";
                        }
                        else if (checkLocationThree != null && checkLocationTwo != null)
                        {
                            currentImage = "MainMapLayouts/multiPinDelete13Layout.png";
                        }
                    } else if (libraryItems.Count() == 3)
                    {
                        currentImage = "MainMapLayouts/multiPinLayout.PNG";
                    }
                }
                break;
            case "LibraryB":
                currentImage = "libraryBLayout.png";
                if (libraryItems[0].Location[0] == "LibraryB")
                {
                    if (libraryItems.Count() == 1)
                    {
                        currentImage = libraryItems[0].ItemLocationImageLink;
                    }
                    else if (libraryItems.Count() == 2)
                    {
                        currentImage = "MainMapLayouts/multiPinGroupLayout.png";
                    }
                }
                break;
            case "LibraryC":
                currentImage = "libraryCLayout.png";
                if (libraryItems.Count() == 1 && libraryItems[0].Location[0] == "LibraryC")
                {
                    currentImage = libraryItems[0].ItemLocationImageLink;
                }
                break;
            case "LibraryD":
                currentImage = "libraryDLayout.png";
                if (libraryItems.Count() == 1 && libraryItems[0].Location[0] == "LibraryD")
                {
                    currentImage = libraryItems[0].ItemLocationImageLink;
                }
                break;
            default:
                break;
        }    
    }

    protected override void OnInitialized()
    {
        Layout.showMenu = true;
        Layout.showLocations = true;
        Layout.update();

        PickImage();
    }
}